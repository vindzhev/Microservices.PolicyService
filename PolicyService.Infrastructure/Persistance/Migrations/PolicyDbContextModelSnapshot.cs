// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PolicyService.Infrastructure.Persistance;

namespace PolicyService.Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(PolicyDbContext))]
    partial class PolicyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PolicyService.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.Cover", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Guid?>("OfferId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Cover");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.Offer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AgentLogin")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<Guid?>("PolicyHolderId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PolicyValidityPeriodId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProductCode")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PolicyHolderId");

                    b.HasIndex("PolicyValidityPeriodId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.Policy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AgentLogin")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Number")
                        .HasColumnType("uuid");

                    b.Property<string>("ProductCode")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.PolicyCover", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<Guid?>("CoverPeriodId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PolicyVersionId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Premium")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CoverPeriodId");

                    b.HasIndex("PolicyVersionId");

                    b.ToTable("PolicyCover");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.PolicyHolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Pesel")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("PolicyHolder");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.PolicyVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CoverPeriodId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PolicyHolderId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PolicyId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("TotalPremiumAmount")
                        .HasColumnType("numeric");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("integer");

                    b.Property<Guid?>("VersionValidityPeriodId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CoverPeriodId");

                    b.HasIndex("PolicyHolderId");

                    b.HasIndex("PolicyId");

                    b.HasIndex("VersionValidityPeriodId");

                    b.ToTable("PolicyVersion");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.ValidityPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ValidityPeriod");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.Cover", b =>
                {
                    b.HasOne("PolicyService.Domain.Entities.Offer", null)
                        .WithMany("Covers")
                        .HasForeignKey("OfferId");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.Offer", b =>
                {
                    b.HasOne("PolicyService.Domain.Entities.PolicyHolder", "PolicyHolder")
                        .WithMany()
                        .HasForeignKey("PolicyHolderId");

                    b.HasOne("PolicyService.Domain.Entities.ValidityPeriod", "PolicyValidityPeriod")
                        .WithMany()
                        .HasForeignKey("PolicyValidityPeriodId");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.PolicyCover", b =>
                {
                    b.HasOne("PolicyService.Domain.Entities.ValidityPeriod", "CoverPeriod")
                        .WithMany()
                        .HasForeignKey("CoverPeriodId");

                    b.HasOne("PolicyService.Domain.Entities.PolicyVersion", null)
                        .WithMany("Covers")
                        .HasForeignKey("PolicyVersionId");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.PolicyHolder", b =>
                {
                    b.HasOne("PolicyService.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("PolicyService.Domain.Entities.PolicyVersion", b =>
                {
                    b.HasOne("PolicyService.Domain.Entities.ValidityPeriod", "CoverPeriod")
                        .WithMany()
                        .HasForeignKey("CoverPeriodId");

                    b.HasOne("PolicyService.Domain.Entities.PolicyHolder", "PolicyHolder")
                        .WithMany()
                        .HasForeignKey("PolicyHolderId");

                    b.HasOne("PolicyService.Domain.Entities.Policy", "Policy")
                        .WithMany("Versions")
                        .HasForeignKey("PolicyId");

                    b.HasOne("PolicyService.Domain.Entities.ValidityPeriod", "VersionValidityPeriod")
                        .WithMany()
                        .HasForeignKey("VersionValidityPeriodId");
                });
#pragma warning restore 612, 618
        }
    }
}
